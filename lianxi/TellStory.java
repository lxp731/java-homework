package lianxi;
public class TellStory {
	public static void main(String[] args) throws InterruptedException{
		String story="线程有两个重要的特征，就是并发执行和共享进程资源。你可以把进程想象成一个鱼缸。鱼缸里的金鱼可以看作线程。\n"
				+ "鱼缸里的碎石、水草、鱼食等可以看作共享的资源。每一条鱼都独立行动，\n"
				+ "随时可以吐个气泡，吃点鱼食，耍弄下水草。鱼缸里的碎石、水草，小鱼儿搬不走、吃不掉，\n"
				+ "是一个不变的量。鱼食和气泡就不一样了，\n"
				+ "每一条小鱼儿随时都会吐泡泡、吃鱼食，改变气泡和鱼食的数量。\n"
				+ "鱼食和气泡，是鱼缸里的可变量。如果有一条小鱼儿，想要数数有多少气泡，\n"
				+ "麻烦就来了，小鱼儿要吐出新泡泡，水面的旧泡泡要破掉，怎么数都跟不上变化的节奏。\n"
				+ "怎么办呢？要让变化停止，数清楚之前，其他的小鱼儿不能吐新泡泡，水面的泡泡也不能破掉。\n"
				+ "数清楚后，再恢复行动。这就像是线程的同步。\n"
				+ "线程的并发执行和共享进程资源，是为了提高效率。\n"
				+ "可是线程间如何管理共享资源的变化，却是一个棘手的问题，甚至是一个损害效率的问题。\n"
				+ "如果有两个以上的线程，关心共享资源的变化，一旦共享资源发生变化，就需要同步。\n"
				+ "线程同步的意思，就是一个接一个来，上一个线程没有完成一项任务之前，下一个线程不能开始相关的行动。\n"
				+ "简单地说，就是排队。";
		char [] ch=story.toCharArray();
		for (int i = 0; i < ch.length; i++) {
			System.out.print(ch[i]);
			Thread.sleep(200);
		}
	}
}